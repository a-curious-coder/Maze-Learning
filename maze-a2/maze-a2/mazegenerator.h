#ifndef MAZEGENERATOR_H
#define MAZEGENERATOR_H

#include <iostream>
#include <string>
#include <vector>

using namespace std;

struct Tile
{
	int row;
	int col;
	bool blocked;
	bool visited;
};

struct Player
{
	char symbol;
	int x;
	int y;
};

class mazegenerator
{
public: 

	//mazegenerator();
	// Generates the maze
	void Generate(int rowCount, int colCount);
	// Checks if the tile is blocked
	bool isBlocked(int row, int col);
	// Returns the amount of rows in the maze
	int getRowCount();
	// Returns the amount of cols in the maze
	int getColCount();
	// 2d Vector of tile pointers. 
	vector<Tile*> getUnvisitedNeighbours(Tile tile);
	// Checks if tile is visited
	string IsVisitedTrue(int r, int c);
	// Prints maze from information generated by the generate function 
	std::string toString();
	// Checks OS program is run on and uses correct library to use the appropriate functions
	void mySleep(int sleepMs);

	char KeyPress(char keypress);

private:

	vector<vector<Tile> > maze;

};


#endif
